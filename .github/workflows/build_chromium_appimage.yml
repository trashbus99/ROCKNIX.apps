name: Chromium ARM64 AppImage Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:  # Allows manual triggering

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          sudo dpkg --add-architecture arm64
          sudo apt-get update
          sudo apt-get install -y \
            build-essential ninja-build \
            ccache git python3-pip \
            clang llvm lld pkg-config \
            libx11-dev libx11-dev:arm64 \
            libxrandr-dev libxrandr-dev:arm64 \
            libxfixes-dev libxfixes-dev:arm64 \
            libxcursor-dev libxcursor-dev:arm64 \
            libxcomposite-dev libxcomposite-dev:arm64 \
            libxi-dev libxi-dev:arm64 \
            libxtst-dev libxtst-dev:arm64 \
            libgtk-3-dev libgtk-3-dev:arm64 \
            libdbus-1-dev libdbus-1-dev:arm64 \
            libnss3-dev libnss3-dev:arm64 \
            libasound2-dev libasound2-dev:arm64 \
            libpulse-dev libpulse-dev:arm64 \
            libcups2-dev libcups2-dev:arm64 \
            libxdamage-dev libxdamage-dev:arm64 \
            libxkbcommon-dev libxkbcommon-dev:arm64 \
            libfontconfig1-dev libfontconfig1-dev:arm64 \
            libfreetype6-dev libfreetype6-dev:arm64 \
            libegl1-mesa-dev libegl1-mesa-dev:arm64 \
            libgbm-dev libgbm-dev:arm64 \
            libdrm-dev libdrm-dev:arm64

      - name: Set Up Ccache for Faster Builds
        uses: actions/cache@v3
        with:
          path: ~/.ccache
          key: chromium-arm64-ccache-${{ github.run_id }}
          restore-keys: chromium-arm64-ccache-

      - name: Clone Chromium Source
        run: |
          git clone --depth=1 https://chromium.googlesource.com/chromium/tools/depot_tools.git ~/depot_tools
          export PATH="$HOME/depot_tools:$PATH"
          mkdir -p ~/chromium
          cd ~/chromium
          fetch --nohooks chromium
          cd src
          git checkout main
          gclient sync --nohooks --no-history
          gclient runhooks

      - name: Configure Chromium Build for ARM64
        run: |
          cd ~/chromium/src
          mkdir -p out/arm64
          cat > out/arm64/args.gn <<EOF
          target_os = "linux"
          target_cpu = "arm64"
          is_debug = false
          use_goma = false
          use_custom_libcxx = false
          symbol_level = 0
          enable_nacl = false
          enable_swiftshader = false
          enable_vulkan = false
          enable_hangout_services_extension = false
          ffmpeg_branding = "Chrome"
          is_component_build = false
          is_clang = true
          use_sysroot = true
          enable_widevine = false
          use_cups = false
          EOF
          gn gen out/arm64

      - name: Build Chromium for ARM64
        run: |
          cd ~/chromium/src
          ninja -C out/arm64 chrome

      - name: Package Chromium into AppImage
        run: |
          mkdir -p AppDir/usr/bin
          cp ~/chromium/src/out/arm64/chrome AppDir/usr/bin/chromium
          chmod +x AppDir/usr/bin/chromium

          # Create an AppRun script
          cat > AppDir/AppRun <<EOF
          #!/bin/sh
          exec "\$(dirname "\$0")/usr/bin/chromium" "\$@"
          EOF
          chmod +x AppDir/AppRun

          # Create a desktop entry
          mkdir -p AppDir/usr/share/applications
          cat > AppDir/usr/share/applications/chromium.desktop <<EOF
          [Desktop Entry]
          Name=Chromium
          Exec=chromium
          Icon=chromium
          Type=Application
          Categories=Network;WebBrowser;
          EOF

          # Download AppImage tool and create AppImage
          wget -O appimagetool https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
          chmod +x appimagetool
          ARCH=arm64 ./appimagetool AppDir Chromium-arm64.AppImage

      - name: Upload Chromium ARM64 AppImage
        uses: actions/upload-artifact@v3
        with:
          name: Chromium-arm64
          path: Chromium-arm64.AppImage
